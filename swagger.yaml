openapi: 3.0.0
info:
  title: Tasks API
  contact: {}
  version: "1.0"
servers:
  - url: https://localhost:8080/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUserRequest"
            example:
              name: bob
              email: bob@gmail.com
              password: secret
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUserRequest"
            example:
              email: susan@gmail.com
              password: secret
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /tasks:
    post:
      tags:
        - Tasks
      summary: Create Task
      operationId: CreateTask
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTaskRequest"
            example:
              company: google
              position: front-end developer
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    get:
      tags:
        - Tasks
      summary: Get All Tasks
      operationId: GetAllTasks
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /tasks/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The task ID
    get:
      tags:
        - Tasks
      summary: Get Single Task
      operationId: GetSingleTask
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false

    patch:
      tags:
        - Tasks
      summary: Update Task
      operationId: UpdateTask
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTaskRequest"
            example:
              company: random
              position: intern
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    delete:
      tags:
        - Tasks
      summary: Delete Task
      operationId: DeleteTask
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
components:
  schemas:
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: bob
        email: bob@gmail.com
        password: secret
    LoginUserRequest:
      title: LoginUserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: susan@gmail.com
        password: secret
    CreateTaskRequest:
      title: CreateTaskRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: google
        position: front-end developer
    UpdateTaskRequest:
      title: UpdateTaskRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: random
        position: intern
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
  - httpBearer: []
tags:
  - name: Auth
    description: ""
  - name: Tasks
    description: ""
